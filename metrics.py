# encoding:utf8
import numpy as np
import pandas as pd

jina1=[[36.88
,
31.94
,
32.99
,
36.78
],[36.88
,
45.73
,
47.92
,
50.12],
[36.88	,48.61,	52.76,	57.07],[21.27	,36.90,	44.83	,62.16],	[36.88,	23.75,	18.12,	13.63]]

bge1=[[50.63
,
43.14
,
43.45
,
47.35
],
[50.63
,
59.90
,
61.80
,
63.24],
[50.62,	62.36,	65.30,	67.80],	[27.92	,47.29	,55.27,	70.47]	,[50.62	,32.08,	23.75	,15.81]]

gte1=[[45.00
,
40.14
,
40.44
,
43.69
],[
45.00
,
53.85
,
56.20
,
57.50
],
[45.00,	56.84,	60.70	,62.82]	,[27.13,	43.72,	52.50	,65.68]	,[45.00,	28.33,	21.12	,14.38]]

openai1=[[62.50
,
54.22
,
55.77,	58.58],	[62.50,	72.50,	73.97,	74.86],	[62.50,75.34,	76.95,	77.40],	[36.78,	58.00,	69.49	,80.59	],[62.50,	38.33,	29.00	,17.81]]

acge=[[52.50,	46.27,	46.80,	50.90],[52.5,	63.33,	64.96,	66.17],	
[52.50
,
66.69
,
69.13
,
70.30],[30.69
,
50.25
,
58.98
,
73.53],[
52.50
,
33.96
,
25.00
,
16.81]]
stella=[[52.50,	44.43,	45.40,	49.13],	[52.50,	61.87,	64.22,	65.56],	
[52.50
,
64.38
,
68.17
,
69.61],
[
30.10
,
46.63
,
57.73
,
73.14],
[
52.50
,
32.71
,
25.13
,
16.69]]
bge_colbert=[[51.25,	41.89,	43.76,	47.48],[51.25,	60.42,	62.07,	63.31],	
[51.25
,
62.94
,
64.85
,
66.78],
[
27.99
,
45.72
,
57.14
,
71.57]
,[
51.25
,
31.46
,
24.87
,
16.38]]
bge_dense=[[52.50,	44.51,	45.54,	48.82],	[52.50,	63.54	,64.95,	65.79],	[52.50,	66.61,	68.61,	69.30],[28.94,	50.10,58.57	,71.44],[	52.50,	33.75,	25.25,	16.19]]
dmeta=[[50.0,	45.75	,46.64,	49.21],[	50.0	,62.40,	64.27,	65.07],	
[50.0
,
66.30
,
69.12
,
70.31
],[
30.53
,
52.07
,
59.87
,
70.07
],[
50.0
,
33.13
,
24.88
,
15.31]]
openai2=[[64.38	,54.72,	55.98,	59.82],[64.38,	73.44,	74.59	,75.43],[64.38,	75.90,	76.90,	77.19],[	36.28,	58.43,	69.43,	82.37],[64.38,	39.80,	29.63,	18.81]
]
def embedding_metrics(version):
    if version==1:
        all_results=[np.asmatrix(jina1),np.asmatrix(bge1),np.asmatrix(gte1),np.asmatrix(openai1)]
    else:
        all_results=[np.asmatrix(acge),np.asmatrix(stella),np.asmatrix(bge_colbert),np.asmatrix(bge_dense),np.asmatrix(dmeta),np.asmatrix(openai2)]
    for model  in  all_results:
        print(model)
        for i,k in enumerate([1,3,5,10]):
            avg=sum(model[:,i])/len(model[:,i])
            print(f'avg@{k}:{avg}')
    print('finish')

embedding_metrics(2)

'''english
[[36.88 31.94 32.99 36.78]
 [36.88 45.73 47.92 50.12]
 [36.88 48.61 52.76 57.07]
 [21.27 36.9  44.83 62.16]
 [36.88 23.75 18.12 13.63]]
avg@1:[[33.758]]
avg@3:[[37.386]]
avg@5:[[39.324]]
avg@10:[[43.952]]
[[50.63 43.14 43.45 47.35]
 [50.63 59.9  61.8  63.24]
 [50.62 62.36 65.3  67.8 ]
 [27.92 47.29 55.27 70.47]
 [50.62 32.08 23.75 15.81]]
avg@1:[[46.084]]
avg@3:[[48.954]]
avg@5:[[49.914]]
avg@10:[[52.934]]
[[45.   40.14 40.44 43.69]
 [45.   53.85 56.2  57.5 ]
 [45.   56.84 60.7  62.82]
 [27.13 43.72 52.5  65.68]
 [45.   28.33 21.12 14.38]]
avg@1:[[41.426]]
avg@3:[[44.576]]
avg@5:[[46.192]]
avg@10:[[48.814]]
[[62.5  54.22 55.77 58.58]
 [62.5  72.5  73.97 74.86]
 [62.5  75.34 76.95 77.4 ]
 [36.78 58.   69.49 80.59]
 [62.5  38.33 29.   17.81]]
avg@1:[[57.356]]
avg@3:[[59.678]]
avg@5:[[61.036]]
avg@10:[[61.848]]
'''
'''chinese ------------------------------------
[[52.5  46.27 46.8  50.9 ]
 [52.5  63.33 64.96 66.17]
 [52.5  66.69 69.13 70.3 ]
 [30.69 50.25 58.98 73.53]
 [52.5  33.96 25.   16.81]]
avg@1:[[48.138]]
avg@3:[[52.1]]
avg@5:[[52.974]]
avg@10:[[55.542]]
[[52.5  44.43 45.4  49.13]
 [52.5  61.87 64.22 65.56]
 [52.5  64.38 68.17 69.61]
 [30.1  46.63 57.73 73.14]
 [52.5  32.71 25.13 16.69]]
avg@1:[[48.02]]
avg@3:[[50.004]]
avg@5:[[52.13]]
avg@10:[[54.826]]
[[51.25 41.89 43.76 47.48]
 [51.25 60.42 62.07 63.31]
 [51.25 62.94 64.85 66.78]
 [27.99 45.72 57.14 71.57]
 [51.25 31.46 24.87 16.38]]
avg@1:[[46.598]]
avg@3:[[48.486]]
avg@5:[[50.538]]
avg@10:[[53.104]]
[[52.5  44.51 45.54 48.82]
 [52.5  63.54 64.95 65.79]
 [52.5  66.61 68.61 69.3 ]
 [28.94 50.1  58.57 71.44]
 [52.5  33.75 25.25 16.19]]
avg@1:[[47.788]]
avg@3:[[51.702]]
avg@5:[[52.584]]
avg@10:[[54.308]]
[[50.   45.75 46.64 49.21]
 [50.   62.4  64.27 65.07]
 [50.   66.3  69.12 70.31]
 [30.53 52.07 59.87 70.07]
 [50.   33.13 24.88 15.31]]
avg@1:[[46.106]]
avg@3:[[51.93]]
avg@5:[[52.956]]
avg@10:[[53.994]]
[[64.38 54.72 55.98 59.82]
 [64.38 73.44 74.59 75.43]
 [64.38 75.9  76.9  77.19]
 [36.28 58.43 69.43 82.37]
 [64.38 39.8  29.63 18.81]]
avg@1:[[58.76]]
avg@3:[[60.458]]
avg@5:[[61.306]]
avg@10:[[62.724]]
'''